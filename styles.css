@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --day-bg: rgba(250, 250, 250, 1);
  --day-bg-o8: rgba(250, 250, 250, 0.8);
  --day-bg-invert: rgb(33, 33, 33); /* portfolio bg */
  --day-bg-img: 0;

  --day-color: rgb(5, 5, 5);
  --day-color-o3: rgba(5, 5, 5, 0.28);

  --day-color2: rgb(88, 0, 27); /* burgundy */
  --day-color3: rgb(218, 121, 14); /* mustard */
  --day-color4: rgb(54, 50, 113); /* purple */
  --day-color-invert: rgb(173, 216, 230); /* lightblue */

  --night-bg: rgba(33,33,33,1);
  --night-bg-o8: rgba(11, 11, 11, 0.85);
  --night-bg-invert: rgba(221,221,221);
  --night-bg-img: 1;

  --night-color: rgb(250, 250, 250);
  --night-color-o3 : rgba(250, 250, 250, 0.28);

  --night-color2: rgb(173, 216, 230); /* lightblue */
  --night-color3: rgb(51, 138, 238); /* blue */
  --night-color4: rgb(255, 255, 0); /* yellow */
  --night-color-invert: rgb(77, 99, 97); /* dirty teal */

  --transition-time: .33s;
}

html {
  font-family: 'Abel', sans-serif;
  font-size: 130%;
  scroll-behavior: smooth;
}

header {top: -2.25rem}

button:focus:not(:focus-visible) {outline: none;}
a:focus, button:focus {
  outline-offset: 2px; 
  outline-style: dotted;
  outline-width: 2px;
}

.stroke-currentColor * {stroke: currentColor}
.fill-currentColor * {fill: currentColor}

.grid {
  display: grid;
  grid-template-columns: 1fr 333px 333px 1fr;
  grid-template-rows: auto 333px;
  grid-auto-rows: 333px;
}
.grid div:nth-of-type(odd) {
  grid-column: 2 / span 1;
}
.grid div:nth-of-type(even) {
  grid-column: 3 / span 1;
}
.grid h2, .grid .heading {
  grid-column: 2 / span 2;
}
.gap-md {
  grid-gap: 1rem;
}

/* ************** */
/* functional CSS */
/* ************** */
.font-barrio {
  font-family: 'Barrio', sans-serif;
}

.color {
  color: var(--day-color);
  transition: color var(--transition-time);
}
.color-o3 {
  color: var(--day-color-o3);
  transition: color var(--transition-time);
}
.color2 {
  color: var(--day-color2);
  transition: color var(--transition-time);
}
.color4 {
  color: var(--day-color4);
  transition: color var(--transition-time);
}
.color-invert {
  color: var(--day-bg);
  transition: color var(--transition-time);
}
.color-invert2 {
  color: var(--day-color-invert);
  transition: color var(--transition-time);
}

.bg {
  background-color: var(--day-bg);
  transition: background-color var(--transition-time);
}
.bg-o8 {
  background-color: var(--day-bg-o8);
  transition: background-color var(--transition-time);
}
.bg-invert {
  background-color: var(--day-bg-invert);
}
.bg-invert2 {
  background-color: var(--day-color-invert);
}

.bg-img::before {
  content: '';
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: inherit;
  background-image:
    linear-gradient(to right, black 0%, rgb(205,205,205,0.7) 35%, rgb(205,205,205,0.7) 75%, black 100%),
    url("img/collage.jpg");
  background-blend-mode: screen;
  transition: filter var(--transition-time);
  filter: invert(var(--day-bg-img));
}
.screen {
  background-blend-mode: screen;
}

.border-currentColor {
  border-color: currentColor;
}

.pt-30vh {
  padding-top: 30vh;
}

.max-w-555 {
  max-width: 555px;
}
.min-h-666 {
  min-height: 666px;
}
.max-w-755 {
  max-width: 755px;
}

.shadow-color2 {
  box-shadow: 0px 0px 1rem 4px var(--day-color2);
}
.shadow-color-o3 {
  box-shadow: 0 0 10px 3px var(--day-color-o3)
}
.shadow-b-color-o3 {
  box-shadow: 0 3px 9px 1px var(--day-color-o3)
}
.shadow-t-color-o3 {
  box-shadow: 0 -3px 9px 1px var(--day-color-o3)
}
.shadow-grey {
  box-shadow: 0 0 10px 4px rgba(119,132,120,0.5);
}

/* to do: get rid of !important */
.outline-currentColor {
  outline-color: currentColor !important;
}
.outline-color3 {
  outline-color: var(--day-color3)!important
}


/* ******************* */
/* object oriented CSS */
/* ******************* */
@keyframes glow {
  to {box-shadow: 0px 0px 4px currentColor;}
}
#dayOrNight {
  transition: all var(--transition-time);
}
.day {
  animation: glow 1.5s alternate infinite ease-in-out;
  border: 2px solid orange;
  color: orange;
  background-color: yellow;
}
@keyframes twinkle {
  to {transform: scale(1.01);}
}
.night {
  background-color: black;
  border-right: 5px solid white;
  box-shadow: 5px -2px 22px -4px white;
}
.night::after {
  content: 'â˜…';
  animation: twinkle 1.5s alternate infinite ease-in-out;
  font-size: 0.15em;
  color: white;
  transform: scale(0.8);
  position: absolute;
  top: -1rem;
  left: -8px;
  box-shadow: 5px -2px 22px -4px white;
}

#play {
  border-color: currentColor;
}
#play::after {
  content: '';
  position: absolute;
  top: 13%; left: 37%;
  border: 9px transparent solid;
  border-left-color: currentColor;
}
#aboutMeSidebar {
  /* half pic height - margin between icons - 1.5 icon height */
  margin-top: calc(159px - 3rem - 53px);
}
#introInner a {
  text-shadow: 2px 2px 4px #3a580096;
}
#mePic {
  shape-outside: circle(50%);
}
#scrollWrapper {
  scroll-behavior: smooth;
}


[data-bg] {
  background-image: attr(data-bg);
}

#music > div:nth-child(7) {
  background-size: contain;
}

#bottomBar {
  transition: transform var(--transition-time),
  background-color var(--transition-time);
}
.hide-bottomBar {
  transform: translateY(100%);
}
#bottomBar button {
  outline-color: currentColor;
}


/* ***** */
/* State */
/* ***** */

.hover\:color3:hover {
  color: var(--day-color3)
}
.hover\:color4:hover {
  color: var(--day-color4)
}
.hover\:opacity-100:hover {
  opacity: 100
}
.hover\:filter:hover {
  filter: contrast(3);
}
.hover\:animation-underline {
  position: relative;
}
.hover\:animation-underline::before {
  position: absolute;
  transform: scaleX(0);
  transition: transform var(--transition-time) linear;
  transform-origin: left;
  width: 100%;
  height: 1px;
  background-color: currentColor;
  top: 90%;
  left: 0;
  content: '';
}
.hover\:animation-underline:hover::before {
  transform: scaleX(1);
}

/* ************* */
/* Media Queries */
/* ************* */

@media (min-width: 1100px) {
  #app {
    max-width: 1100px;
  }
  .grid {
    grid-template-columns: 333px 333px 333px;
  }
  .grid div {
    grid-column: auto !important;
  }
  .grid h2 {
    grid-column: 1 / -1 !important;
  }
}

@media (max-width: 735px) {
  html {
    font-size: 120%;
  }
  .grid {
    grid-template-columns: 1fr 333px 1fr;
    grid-template-rows: auto 333px;
  }
  .grid div, .grid h2 {
    grid-column: 2 / span 1 !important;
  }
}

@media (max-width: 363px) {
  .grid {
    grid-template-columns: 1fr 270px 1fr;
    grid-template-rows: auto 270px 270px 270px 270px;
  }
  h1 {
    display: none;
  }
  #intro {
    padding-top: 120px;
  }
  nav ul {
    flex-wrap: wrap;
    font-size: 1.1rem;
    justify-content: center;
  }
  #intro h2, #intro span {
    font-size: 1.65rem;
  }
}

@media (prefers-reduced-motion) {
  :root {
    --transition-time: 0s;
  }
}

/* hack so i can detect prefers-color-scheme with JS */
html {
  content: ""; /* (ab)using the content property */
}
@media (prefers-color-scheme: light) {
  html {
    content: "light"; /* (ab)using the content property */
  }
}
@media (prefers-color-scheme: dark) {
  html {
    content: "dark"; /* (ab)using the content property */
  }
}
